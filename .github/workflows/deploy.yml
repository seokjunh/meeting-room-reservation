name: Deploy Namoo Meeting App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      MONGO_URL: ${{ secrets.MONGO_URL }}
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: React Build and push
        uses: docker/build-push-action@v6
        with:
          context: frontend/.
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/namoo-meeting:front-latest

      - name: FastAPI Build and push
        uses: docker/build-push-action@v6
        with:
          context: backend/.
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/namoo-meeting:back-latest

      - name: SSH & Deploy on Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 32111
          script: |
            mkdir -p /namooinc/web/meeting

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 32111
          source: "./docker-compose.yml"
          target: "/namooinc/web/meeting"

      - name: SSH & Deploy on Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          envs: MONGO_URL,VITE_API_URL
          script: |
            set -e
            cd /namooinc/web/meeting

            docker compose build --no-cache
            docker compose down
            docker compose up -d
